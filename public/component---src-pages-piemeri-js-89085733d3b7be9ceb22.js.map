{"version":3,"sources":["webpack:///./src/pages/piemeri.js"],"names":["QualityPage","data","title","description","className","allFile","edges","map","el","index","fluid","node","childImageSharp","alt","backgroundColor","fadeIn","durationFadeIn","file"],"mappings":"4FAAA,uFA2EeA,UAnEK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACEC,MAAM,WACNC,YAAY,6DAGhB,wBAAIC,UAAU,iBAAd,mBACA,yBAAKA,UAAU,mBACZH,EAAKI,QAAQC,MAAMC,KAAI,SAACC,EAAIC,GAAL,OACtB,oCACE,yBAAKL,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,cACVM,MAAOF,EAAGG,KAAKC,gBAAgBF,MAC/BG,IAAI,MACJC,gBAAgB,UAChBC,QAAQ,EACRC,eAAe,UAIlBP,EAAQ,GAAM,GACb,yBAAKL,UAAU,aACb,kBAAC,IAAD,CAEEM,MAAOT,EAAKgB,KAAKL,gBAAgBF,MACjCG,IAAI,iB","file":"component---src-pages-piemeri-js-89085733d3b7be9ceb22.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport \"./piemeri.scss\"\n\nconst QualityPage = ({ data }) => {\n  return (\n    <Layout>\n      {\n        <SEO\n          title=\"Examples\"\n          description=\"We Are A Full Year-Round Building Cleaning Service Group\"\n        />\n      }\n      <h1 className=\"quality-title\">Completed Work:</h1>\n      <div className=\"gallery-content\">\n        {data.allFile.edges.map((el, index) => (\n          <>\n            <div className=\"quality-box\">\n              <Img\n                className=\"quality-img\"\n                fluid={el.node.childImageSharp.fluid}\n                alt=\"img\"\n                backgroundColor=\"#F4F4F4\"\n                fadeIn={true}\n                durationFadeIn=\"2000\"\n              />\n              \n            </div>\n            {index % 2 === 0 && (\n              <div className=\"arrow-box\">\n                <Img\n                  \n                  fluid={data.file.childImageSharp.fluid}\n                  alt=\"img\"\n                />\n              </div>\n            )}\n          </>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allFile(\n      filter: { relativePath: {}, relativeDirectory: { eq: \"quality\" } }\n      sort: { fields: [base] }\n    ) {\n      edges {\n        node {\n          base\n          childImageSharp {\n            fluid(maxWidth: 600, quality: 100) {\n              ...GatsbyImageSharpFluid_withWebp_noBase64\n            }\n          }\n        }\n      }\n    }\n    file(relativePath: { eq: \"icons/arrow.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp_noBase64\n        }\n      }\n    }\n  }\n`\n\nexport default QualityPage\n"],"sourceRoot":""}